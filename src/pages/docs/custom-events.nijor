<section n:imported="components/docs/section"/>
<highlight n:imported="components/docs/highlight"/>
<body>
    <section title="Custom Events">
        We can create custom events in Nijor. What it means is that, just like events like <highlight>on:click</highlight> exist in Nijor, we can create our own event like <highlight>on:myevent</highlight>.
        It's pretty easy to do so. <br>
        Let's consider a component <highlight>msg.nijor</highlight> which uses a custom event <highlight>on:msg</highlight>. Whenever a message is send from the <highlight>send.nijor</highlight>, the sender's name and message gets printed in the paragraph tag. <br><br>
        
        <p>File : src/page/msg.nijor</p>
        <pre><code>
            &lt;body&gt;
                &lt;div&gt;
                    &lt;p id="msg" on:msg="PrintMsg($data)"&gt;
                &lt;/div&gt;
            &lt;/body&gt;
            &lt;script&gt;
            function PrintMsg(msgdata)\{
                document.getElementById('msg').innerHTML += `\$\{msgdata.name} : \$\{msgdata.text} &lt;br&gt;`;
            }
            &lt;/script&gt;
            &lt;script defer&gt;
                // element.addEventListener doesn't work for custom events.
                // document.getElementById('msg').addEventListener('msg',($data)=>PrintMsg($data)); doesn't work for custom events.
            &lt;/script&gt;
        </code></pre>

        <p>File : src/page/send.nijor</p>
        <pre><code>
            &lt;body&gt;
                &lt;div&gt;
                    &lt;input id="name"&gt;
                    &lt;input id="message"&gt;
                    &lt;input type="button" on:click="SendMsg()" value="Send"&gt;
                &lt;/div&gt;
            &lt;/body&gt;
            &lt;script&gt;
            
            import \{dispatchEvent} from "nijor";

            function SendMsg(msgdata)\{
                let name = document.getElementById('name');
                let message = document.getElementById('message');
                let data = \{name:name,text:message};

                // This fires the 'on:msg' event across all the components that are currently in use.
                // All the elements with on:msg events' function's $data get replaced by \{name:name,text:message}
                dispatchEvent('msg',data);
            }
            &lt;/script&gt;
        </code></pre>
    </section>
</body>
<script defer>
    hljs.highlightAll();
</script>