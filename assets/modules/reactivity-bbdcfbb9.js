import{$ as e,a as t}from"./highlight-108c1935.js";import i from"./codeblock-86d6213a.js";var n=new window.nijor.component((async function(){return'<div style="display:none;" n-scope="E4PLuAJOXxe6"><coder3but n-scope="E4PLuAJOXxe6"></coder3but></div>\n    <sectionr3but title="Reactivity" n-scope="E4PLuAJOXxe6">\n        In Nijor, we can define <highlightr3but n-scope="E4PLuAJOXxe6">reactive variables</highlightr3but>.\n        Reactive variables are defined as properties of the window.nijor.reactiveVars object. You can use the syntax, <highlightr3but n-scope="E4PLuAJOXxe6">window.nijor.reactiveVars[\'varname\']</highlightr3but> to create a reactive variable. To access the value of a reactive variable inside the template tag, use the <highlightr3but n-scope="E4PLuAJOXxe6">{{varname}}</highlightr3but> syntax.\n        <coder3but n-scope="E4PLuAJOXxe6">\n            &lt;template&gt;\n                &lt;!--To fetch the value of a reactive variable within the Nijor template, use {{variable}} --&gt;\n                &lt;!--Whenever the value of window.nijor.reactiveVars[\'count\'] changes, the value of {{count}} will automatically change--&gt;\n                &lt;button on:click="UpdateCount()"&gt;{{count}}&lt;/button&gt;\n            &lt;/template&gt;\n            &lt;script&gt;\n                window.nijor.reactiveVars[\'count\'] = 1; \n                // window.nijor.reactiveVars is a special object which contains a key-value pair of reactive variables and their values.\n                // Changes in values of reactive variables get reflected on the DOM only.\n                function UpdateCount(){\n                    window.nijor.reactiveVars[\'count\']+=1;\n                }\n            &lt;/script&gt;\n        </coder3but>\n    </sectionr3but>\n'}),(async function(){e.init("sectionr3but"),await e.run(),t.init("highlightr3but"),await t.run(),i.init("coder3but"),await i.run()}));export{n as default};
